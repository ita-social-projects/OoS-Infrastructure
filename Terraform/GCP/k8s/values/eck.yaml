eck-elasticsearch:
  enabled: true
  version: 8.14.3
  fullnameOverride: "elasticsearch"
  annotations:
    eck.k8s.elastic.co/license: "basic"
  auth:
    fileRealm:
    - secretName: elastic-credentials
    - secretName: webapi-es-credentials
    - secretName: elastic-user-rmon
    - secretName: devqc-es-credentials
    roles:
    - secretName: elastic-roles-secret
  nodeSets:
  - name: "elastic"
    count: 1
    config:
      node.store.allow_mmap: false
      #xpack.monitoring.history.duration: 7d
      path.repo:
        - /usr/share/elasticsearch/data/backup
    podTemplate:
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        - name: install-plugins
          command:
          - sh
          - -c
          - |
            bin/elasticsearch-plugin install --batch analysis-icu
            bin/elasticsearch-plugin install --batch analysis-ukrainian
            bin/elasticsearch-plugin install --batch mapper-murmur3
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms768m -Xmx768m
          resources:
            requests:
              cpu: "200m"
              memory: "1376Mi"
            limits:
              cpu: "1"
              memory: "1536Mi"
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: statefulset.kubernetes.io/pod-name
                    operator: In
                    values:
                      - mysql-0
                  - key: common.k8s.elastic.co/type
                    operator: In
                    values:
                      - kibana
                topologyKey: kubernetes.io/hostname
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        storageClassName: "standard"
        resources:
          requests:
            storage: 30G
eck-kibana:
  enabled: true
  version: 8.14.3
  fullnameOverride: "kibana"
  annotations:
    eck.k8s.elastic.co/license: basic
  spec:
    count: 1
    config:
      monitoring.kibana.collection.enabled: false
    elasticsearchRef:
      name: "elasticsearch"
    podTemplate:
        spec:
          containers:
          - name: kibana
            env:
              - name: NODE_OPTIONS
                value: "--max-old-space-size=1256"
            resources:
              requests:
                cpu: "200m"
                memory: "512Mi"
              limits:
                cpu: "500m"
                memory: "1256Mi"
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "statefulset.kubernetes.io/pod-name"
                      operator: In
                      values:
                        - elasticsearch-es-elastic-0
                        - mysql-0
                  topologyKey: kubernetes.io/hostname
eck-beats:
  enabled: true
  name: metricbeat
  annotations:
    eck.k8s.elastic.co/license: "basic"
  spec:
    type: metricbeat
    version: 8.14.3
    elasticsearchRef:
      name: elasticsearch
    kibanaRef:
      name: kibana
    config:
      # Since filebeat is used in the default values, this needs to be removed with an empty list.
      setup.ilm:
        enabled: true
        policy_name: metricbeat
        overwrite: true
        policy_file: "metricbeat-ilm-policy.json"
      #  Then you use single node for ECK cluster there are not replicas
      setup.template.settings:
        index.number_of_replicas: 0
      # Sets the memory queue to buffer up to 4096 events
      # Forward events to the output if 2048 events are available or the oldes available event has been wainitg for 5 s in queue
      queue.mem:
        events: 4096
        flush.min_events: 2048
        flush.tomeout: 5s
      http:
        enabled: true
      filebeat.inputs: []
      metricbeat:
        autodiscover:
          providers:
          - hints:
              default_config: {}
              enabled: "true"
            node: ${NODE_NAME}
            type: kubernetes
        modules:
        - module: system
          period: 30s
          metricsets:
          - cpu
          - load
          - memory
          - network
          - process
          - process_summary
          - uptime
          process:
            include_top_n:
              by_cpu: 5
              by_memory: 5
          processes:
          - .*
        - module: system
          period: 1m
          metricsets:
          - filesystem
          - fsstat
          processors:
          - drop_event:
              when:
                regexp:
                  system:
                    filesystem:
                      mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib)($|/)
        - module: kubernetes
          period: 30s
          node: ${NODE_NAME}
          hosts:
          - https://${NODE_NAME}:10250
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          ssl:
            verification_mode: none
          metricsets:
          - node
          - system
          - pod
          - container
          - volume
        - module: elasticsearch
          metricsets:
            - ccr
            - cluster_stats
            - enrich
            - index
            - index_recovery
            - index_summary
            - ml_job
            - node_stats
            - shard
          period: 10s
          hosts: ["https://elasticsearch-es-http.default.svc:9200"]
          username: ${MONITORED_ES_USERNAME}
          password: ${MONITORED_ES_PASSWORD}
          ssl:
            certificate_authorities:
            - /mnt/elastic-internal/elasticsearch-certs/ca.crt
          xpack.enabled: true
        - module: kibana
          metricsets:
            - stats
          period: 10s
          hosts: ["https://kibana-kb-http.default.svc:5601"]
          username: ${MONITORED_KB_USERNAME}
          password: ${MONITORED_KB_PASSWORD}
          ssl:
            certificate_authorities:
              - /mnt/elastic-internal/kibana-certs/ca.crt
          xpack.enabled: true
        # - module: nginx
        #   #metricsets: ["stubstatus"]
        #   enabled: true
        #   period: 10s
        #   # Nginx hosts
        #   hosts: ["http://ingress-ingress-nginx-defaultbackend.ingress-nginx.svc"]
        #   # Path to server status. Default nginx_status
        #   server_status_path: "nginx_status"
        - module: mysql
          enabled: true
          metricsets: ["status"]
          hosts: ["${MYSQL_HOST}"]
          username: "${MYSQL_USER}"
          password: "${MYSQL_PASSWORD}"
        - module: redis
          enabled: true
          period: 15s
          hosts: ["${REDIS_HOST}"]
          password: "${REDIS_PASSWORD}"
        - module: beat
          metricsets:
            - stats
            - state
          period: 10s
          hosts: ["http://localhost:5066"]
          xpack.enabled: true
      processors:
      - add_cloud_metadata: {}
      - add_host_metadata: {}
    daemonSet:
      podTemplate:
        spec:
          serviceAccountName: metricbeat
          automountServiceAccountToken: true # some older Beat versions are depending on this settings presence in k8s context
          containers:
          - args:
            - -e
            - -c
            - /etc/beat.yml
            - -system.hostfs=/hostfs
            name: metricbeat
            volumeMounts:
            - mountPath: /hostfs/sys/fs/cgroup
              name: cgroup
            - mountPath: /var/run/docker.sock
              name: dockersock
            - mountPath: /hostfs/proc
              name: proc
            - name: ilm-policy
              mountPath: /usr/share/metricbeat/metricbeat-ilm-policy.json
              subPath: metricbeat-ilm-policy.json
              readOnly: true
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MONITORED_ES_USERNAME
              value: default-eck-stack-eck-beats-beat-user
            - name: MONITORED_ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: eck-stack-eck-beats-beat-user
                  key: default-eck-stack-eck-beats-beat-user
            - name: MONITORED_KB_USERNAME
              value: default-eck-stack-eck-beats-beat-kb-user
            - name: MONITORED_KB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: eck-stack-eck-beats-beat-kb-user
                  key: default-eck-stack-eck-beats-beat-kb-user
            - name: "MYSQL_HOST"
              value: "tcp(mysql.default.svc:3306)/"
            - name: "REDIS_HOST"
              value: "redis-master.default.svc:6379"
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: redis-auth
                  key: password
            - name: "MYSQL_USER"
              valueFrom:
                secretKeyRef:
                  name: mysql-user-agent
                  key: user
            - name: "MYSQL_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: mysql-user-agent
                  key: password
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 100m
                memory: 100Mi
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true # Allows to provide richer host metadata
          securityContext:
            runAsUser: 0
          terminationGracePeriodSeconds: 30
          volumes:
          - hostPath:
              path: /sys/fs/cgroup
            name: cgroup
          - hostPath:
              path: /var/run/docker.sock
            name: dockersock
          - hostPath:
              path: /proc
            name: proc
          - name: ilm-policy
            secret:
              secretName: metricbeat-ilm-policy
  clusterRole:
    # permissions needed for metricbeat
    # source: https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-module-kubernetes.html
    name: metricbeat
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      - namespaces
      - events
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - "extensions"
      resources:
      - replicasets
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - apps
      resources:
      - statefulsets
      - deployments
      - replicasets
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - nodes/stats
      verbs:
      - get
    - nonResourceURLs:
      - /metrics
      verbs:
      - get

  serviceAccount:
    name: metricbeat

  clusterRoleBinding:
    name: metricbeat
    subjects:
    - kind: ServiceAccount
      name: metricbeat
    roleRef:
      kind: ClusterRole
      name: metricbeat
      apiGroup: rbac.authorization.k8s.io

eck-apm-server:
  enabled: true
  version: 8.14.3
  count: 1
  elasticsearchRef:
    name: elasticsearch
  kibanaRef:
    name: kibana
  secureSettings:
  - secretName: elastic-credentials
  config:
    output:
      elasticsearch:
        hosts: ["https://elasticsearch-es-http.default.svc:9200"]
        username: "${username}"
        password: "${password}"
        protocol: "https"
        ssl.certificate_authorities: ["/usr/share/apm-server/config/elasticsearch-ca/tls.crt"]
    ilm:
      enabled: true
      setup:
        enabled: true
        overwrite: true
        require_policy: true
        mapping:
          - event_type: "error"
            policy_name: "apm-rollover-30-days"
            index_suffix: ""
          - event_type: "span"
            policy_name: "apm-rollover-30-days"
            index_suffix: ""
          - event_type: "transaction"
            policy_name: "apm-rollover-30-days"
            index_suffix: ""
          - event_type: "metric"
            policy_name: "apm-rollover-30-days"
            index_suffix: ""
        policies:
          - name: "apm-rollover-30-days"
            policy:
              phases:
                hot:
                  actions:
                    rollover:
                      max_size: "50gb"
                      max_age: "30d"
                    set_priority:
                      priority: 100
  podTemplate:
    spec:
      containers:
      - name: apm-server
        volumeMounts:
        - mountPath: /usr/share/apm-server/config/elasticsearch-ca
          name: elasticsearch-ca
          readOnly: true
        resources:
          requests:
            cpu: "200m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "statefulset.kubernetes.io/pod-name"
                  operator: In
                  values:
                    - mysql-0
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: elasticsearch-ca
        secret:
          defaultMode: 420
          optional: false
          secretName: elasticsearch-es-http-ca-internal # This is the secret that holds the Elasticsearch CA cert
