eck-elasticsearch:
  enabled: true
  version: 8.5.1
  fullnameOverride: "elasticsearch"
  annotations:
    eck.k8s.elastic.co/license: "basic"
  auth:
    fileRealm:
    - secretName: elastic-credentials
    - secretName: webapi-es-credentials
    roles:
    - secretName: elastic-roles-secret
  nodeSets:
  - name: "elastic"
    count: 1
    config:
      node.store.allow_mmap: false
    podTemplate:
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        - name: install-plugins
          command:
          - sh
          - -c
          - |
            bin/elasticsearch-plugin install --batch analysis-icu
            bin/elasticsearch-plugin install --batch analysis-ukrainian
            bin/elasticsearch-plugin install --batch mapper-murmur3
        containers:
        - name: elasticsearch
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1768Mi"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        storageClassName: "standard"
        resources:
          requests:
            storage: 15G
eck-kibana:
  enabled: true
  version: 8.5.1
  fullnameOverride: "kibana"
  annotations:
    eck.k8s.elastic.co/license: basic
  spec:
    count: 1
    elasticsearchRef:
      name: "elasticsearch"
    podTemplate:
        spec:
          containers:
          - name: kibana
            env:
              - name: NODE_OPTIONS
                value: "--max-old-space-size=2048"
            resources:
              requests:
                cpu: "200m"
                memory: "512Mi"
              limits:
                cpu: "500m"
                memory: "1256Mi"
eck-beats:
  enabled: true
  name: metricbeat
  annotations:
    eck.k8s.elastic.co/license: "basic"
  spec:
    type: metricbeat
    version: 8.5.1
    elasticsearchRef:
      name: elasticsearch
    kibanaRef:
      name: kibana
    config:
      # Since filebeat is used in the default values, this needs to be removed with an empty list.
      setup.ilm:
        enabled: true
        policy_name: metricbeat
        overwrite: true
        policy_file: "metricbeat-ilm-policy.json"
      filebeat.inputs: []
      metricbeat:
        autodiscover:
          providers:
          - hints:
              default_config: {}
              enabled: "true"
            node: ${NODE_NAME}
            type: kubernetes
        modules:
        - module: system
          period: 30s
          metricsets:
          - cpu
          - load
          - memory
          - network
          - process
          - process_summary
          process:
            include_top_n:
              by_cpu: 5
              by_memory: 5
          processes:
          - .*
        - module: system
          period: 1m
          metricsets:
          - filesystem
          - fsstat
          processors:
          - drop_event:
              when:
                regexp:
                  system:
                    filesystem:
                      mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib)($|/)
        - module: kubernetes
          period: 30s
          node: ${NODE_NAME}
          hosts:
          - https://${NODE_NAME}:10250
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          ssl:
            verification_mode: none
          metricsets:
          - node
          - system
          - pod
          - container
          - volume
      processors:
      - add_cloud_metadata: {}
      - add_host_metadata: {}
    daemonSet:
      podTemplate:
        spec:
          serviceAccountName: metricbeat
          automountServiceAccountToken: true # some older Beat versions are depending on this settings presence in k8s context
          containers:
          - args:
            - -e
            - -c
            - /etc/beat.yml
            - -system.hostfs=/hostfs
            name: metricbeat
            volumeMounts:
            - mountPath: /hostfs/sys/fs/cgroup
              name: cgroup
            - mountPath: /var/run/docker.sock
              name: dockersock
            - mountPath: /hostfs/proc
              name: proc
            - name: ilm-policy
              mountPath: /usr/share/metricbeat/metricbeat-ilm-policy.json
              subPath: metricbeat-ilm-policy.json
              readOnly: true
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true # Allows to provide richer host metadata
          securityContext:
            runAsUser: 0
          terminationGracePeriodSeconds: 30
          volumes:
          - hostPath:
              path: /sys/fs/cgroup
            name: cgroup
          - hostPath:
              path: /var/run/docker.sock
            name: dockersock
          - hostPath:
              path: /proc
            name: proc
          - name: ilm-policy
            secret:
              secretName: metricbeat-ilm-policy

  clusterRole:
    # permissions needed for metricbeat
    # source: https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-module-kubernetes.html
    name: metricbeat
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes
      - namespaces
      - events
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - "extensions"
      resources:
      - replicasets
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - apps
      resources:
      - statefulsets
      - deployments
      - replicasets
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - nodes/stats
      verbs:
      - get
    - nonResourceURLs:
      - /metrics
      verbs:
      - get

  serviceAccount:
    name: metricbeat

  clusterRoleBinding:
    name: metricbeat
    subjects:
    - kind: ServiceAccount
      name: metricbeat
    roleRef:
      kind: ClusterRole
      name: metricbeat
      apiGroup: rbac.authorization.k8s.io
