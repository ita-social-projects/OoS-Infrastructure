apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "elastic.fullname" . }}-es-script
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  setup.sh: |
    #!/bin/bash

    echo "Starting job..."
    while [[ "$(curl -s -o /dev/null -u elastic:${ADMIN_PASSWORD} -w '%{http_code}\n' --cacert /usr/local/share/ca-certificates/ca.crt $ES_URL)" != "200" ]]; do sleep 1; done

    ROLES=(/etc/roles/*.json)
    for role in "${ROLES[@]}"
    do
      NAME=$(basename $role)
      echo "Updating role: ${NAME}..."
      curl -s -o /dev/null -u elastic:${ADMIN_PASSWORD} ${ES_URL}/_security/role/${NAME%.json} -H "Content-Type: application/json" -d @$role --cacert /usr/local/share/ca-certificates/ca.crt
      echo "Done..."
    done

    # Create user with outofschool role
    # TODO: add multiple roles from list if needed
    echo "Creating user with role..."
    curl -s -o /dev/null -u elastic:${ADMIN_PASSWORD} ${ES_URL}/_security/user/webapi -H "Content-Type: application/json" -d "{\"password\": \"${API_PASS}\", \"roles\" : [ \"outofschool\" ]}" --cacert /usr/local/share/ca-certificates/ca.crt
    echo "Done..."
