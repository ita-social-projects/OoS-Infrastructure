# Default values for outofschool.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global: {}

nameOverride: ""
fullnameOverride: ""

commonLabels:
  tier: backend
  service: webapi

image:
  fullTagOverride: ""
  pullPolicy: IfNotPresent

deploy:
  containerPort: 8080

configuration:
  extraEnvironment:
    ASPNETCORE_ENVIRONMENT: Kubernetes
    ASPNETCORE_URLS: http://0.0.0.0:$(PORT);http://0.0.0.0:9000
    ConnectionStringsOverride__DefaultConnection__UserId: api
    SERVICE_BINDING_ROOT: /workspace/bindings
    Elasticsearch__Urls__0: https://elasticsearch-es-http:9200
  extraEnvVarsSecret: "webapi-secrets"
  secrets:
  - type: env
    name: mysql-api-auth
    keys:
    - key: API_PASSWORD
      envKey: ConnectionStringsOverride__DefaultConnection__Password
      upper: false
  - type: env
    name: redis-auth
    keys:
    - key: password
      envKey: Redis__Password
      upper: false
  - type: env
    name: webapi-es-credentials
    keys:
    - key: password
      envKey: Elasticsearch__Password
      upper: false

migrations:
  enabled: true
  jobKind: Job
  jobAnnotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  configuration:
    extraEnvironment:
      DB_HOST: mysql
      DB_USER: oos
    secrets:
    - type: env
      name: mysql-api-auth
      keys:
      - key: IDENTITY_PASSWORD
        envKey: DB_PASS
  image:
    fullTagOverride: ""
    pullPolicy: IfNotPresent
  serviceAccount:
    annotations:
      "helm.sh/hook": pre-install,pre-upgrade
      "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    imagePullSecrets:
    - name: outofschool-gcp-pull-secrets

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/issuer: "letsencrypt"
    cert-manager.io/duration: 2160h0m0s
    cert-manager.io/renew-before: 168h0m0s
    # Websocket increased limits
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # This is only needed if we're not using a separate health port and use the path rule: /(?!.*(?:healthz))(.*)
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: REALTIMESERVERID
    nginx.ingress.kubernetes.io/session-cookie-path: /hubs
  hosts:
    - host: "replace_me"
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
  - secretName: webapi-tls
    hosts:
    - replace_me

resources:
  limits:
    cpu: 1000m
    memory: 768Mi
  requests:
    cpu: 500m
    memory: 384Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPU: 60
  targetMemory: 80

readinessProbe:
  enabled: true
  port: 9000
  path: "/healthz/ready"
  initialDelaySeconds: 30
  timeoutSeconds: 2
  periodSeconds: 20
  failureThreshold: 3
  successThreshold: 1

serviceAccount:
  imagePullSecrets:
  - name: outofschool-gcp-pull-secrets

storage:
  extraVolumes:
    - name: elastic-certs
      secret:
        secretName: elasticsearch-es-http-certs-public
    - name: binding
      emptyDir: {}

  extraVolumeMounts:
      - name: elastic-certs
        mountPath: "/workspace/elastic/certs"
        readOnly: true
      - name: binding
        mountPath: /workspace/bindings/ca-certificates

initContainers:
  - name: init-myservice
    image: busybox:1.28
    command:
      - sh
      - -c
      - "echo ca-certificates > /workspace/bindings/ca-certificates/type; cp /workspace/elastic/certs/*.crt /workspace/bindings/ca-certificates"
    volumeMounts:
      - name: elastic-certs
        mountPath: "/workspace/elastic/certs"
        readOnly: true
      - name: binding
        mountPath: /workspace/bindings/ca-certificates

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: "statefulset.kubernetes.io/pod-name"
            operator: In
            values:
              - elasticsearch-es-elastic-0
              - mysql-0
        topologyKey: kubernetes.io/hostname

